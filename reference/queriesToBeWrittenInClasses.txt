------------- locationQuery ----------------
	function getLocationsForCity($city) {
		$sql = $this->mkSQL("select * from location where city_id in (select city_id from city where city = %Q)",$city);
		return array_map(array($this, '_mkObj'), $this->exec($sql));
	}
	function getLocationsInTheSameCityAs($locationid) {
		$sql = $this->mkSQL("select * from location where city_id = (select city_id from location where location_id = %N) ", $locationid);
		return array_map(array($this, '_mkObj'), $this->exec($sql));
	}
	function getCityOfLocation($chosenlocationid)
	{
		$sql = $this->mkSQL("select city from city where city_id in (select city_id from location where location_id= %N)",$chosenlocationid);
		$result= $this->exec($sql);
		return $result[0]['city'];
	}

------------- specialityQuery ----------------

	function getSpecialities (){
		$sql = $this->mkSQL("select * from speciality");
		return array_map(array($this, '_mkObj'), $this->exec($sql));
	}

------------- subspecialityQuery ----------------
	function getSubSpecialitiesFor($speciality){
		$sql = $this->mkSQL("select * from sub_speciality where sub_speciality_id IN(select sub_speciality_id from speciality_sub_speciality_link where 					speciality_id IN (select speciality_id from speciality where speciality=%Q))",$speciality);
		return array_map(array($this, '_mkObj'), $this->exec($sql));
	}


------------- scheduleQuery ----------------
	/********************************************************************************
	*  this query returns schedule details for a given doctor at a location
	*
	* @param string city
	* &param
	* @return Copy returns copy or false, if error occurs
	* @access public
	********************************************************************************
	*/
	function getSchedulesByCriteria($doctorid, $chosenlocationid) {
		$sqlstring  = "select a.description as clinic, a.from_date as 'Date From', a.to_date as 'Date To', a.from_time as From, a.to_time as To ";
		$sqlstring .= " from doctor a, schedule b";
		$sqlstring .= " where a.doctor_id = " . $doctorid . " and a.doctor_id = b.doctor_id";
		$sqlstring .= " and b.location_id = " . $chosenlocationid;

		return $this->exec($sqlstring);
	}

	/********************************************************************************
	*  this query returns all doctors who have a free clinic at a given location
	*
	* @param string city
	* &param
	* @return Copy returns copy or false, if error occurs
	* @access public
	********************************************************************************
	*/
	function getDoctorsByCriteria($speciality, $subspeciality, $chosencity, $chosenlocationid, $last,$count) {
		$sqlstring  = "select a.doctor_id, concat(a.first_name, ' ', a.last_name) as doctor, d.speciality as Speciality, e.speciality as 'Sub Speciality'";
		$sqlstring .= " from doctor a, schedule b, speciality_sub_speciality_link c, speciality d, sub_speciality e, location f, city g";
		$sqlstring .= " where a.doctor_id = b.doctor_id and a.speciality_Sub_Speciality_link_id = c.speciality_Sub_Speciality_link_id";
		$sqlstring .= " and c.speciality_id = d.speciality_id and c.sub_speciality_id = e.sub_speciality_id";
		$sqlstring .= " and b.location_id = f.location_id and f.city_id = g.city_id";

		if ( !(empty($speciality)) && (strlen($speciality) > 0) )
			$sqlstring .= " and d.speciality = '" . $speciality . "'";

		if ( !(empty($subspeciality)) && (strlen($subspeciality) > 0) )
			$sqlstring .= " and e.speciality = '" . $subspeciality . "'";

		if ( !(empty($city)) && (strlen($city) > 0) )
			$sqlstring .= " and g.city = '". $city . "'";

		if ( !(empty($location)) && (strlen($location) > 0) )
			$sqlstring .= " and f.location_id = ". $location;
		
		$sqlstring .= " group by doctor_id, doctor, Speciality, 'Sub Speciality'";
		$sqlstring .= " limit  ". $last. ",". $count;

		return $this->exec($sqlstring);
	}

	/********************************************************************************
	*  this query returns count of doctors found for given criteria
	*
	* @param string city
	* &param
	* @return Copy returns copy or false, if error occurs
	* @access public
	********************************************************************************
	*/
	function getCountOfDoctorsByCriteria($speciality, $subspeciality, $chosencity, $chosenlocationid) {

		$sqlstring  = "select count(*) as numberofrecords ";
		$sqlstring .= " FROM doctor a, schedule b, speciality_sub_speciality_link c, speciality d, sub_speciality e, location f, city g";
		$sqlstring .= " WHERE a.doctor_id = b.doctor_id";
		$sqlstring .= " AND a.speciality_Sub_Speciality_link_id = c.speciality_Sub_Speciality_link_id AND c.speciality_id = d.speciality_id";
		$sqlstring .= " and c.sub_speciality_id = e.sub_speciality_id and  b.location_id = f.location_id AND f.city_id = g.city_id";

		if ( !(empty($speciality)) && (strlen($speciality) > 0) )
			$sqlstring .= " and d.speciality = '" . $speciality . "'";

		if ( !(empty($subspeciality)) && (strlen($subspeciality) > 0) )
			$sqlstring .= " and e.speciality = '" . $subspeciality . "'";

		if ( !(empty($city)) && (strlen($city) > 0) )
			$sqlstring .= " and g.city = '". $city . "'";

		if ( !(empty($location)) && (strlen($location) > 0) )
			$sqlstring .= " and f.location_id = ". $location;
		
		$result=$this->exec($sqlstring);
		
		return $result[0]['numberofrecords'];
	}

	
------------- cityQuery ----------------
	function getCities(){
		$sql = $this->mkSQL("select * from city where city_id IN (select distinct city_id from location where location_id IN (
					select location_id from schedule where expiry_date > CURDATE())");
		return array_map(array($this, '_mkObj'), $this->exec($sql));
	}




